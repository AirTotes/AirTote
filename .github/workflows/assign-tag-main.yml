name: Assign Bundle ID tags (Pull Request)

on:
  push:
    branches:
      - main

jobs:
  assign-tag:
    if: ${{ github.event.label.name == 'deploy' }}
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
      with:
        ref: ${{github.head_ref}}

    - name: remove label from PR
      run: gh pr edit ${{ github.event.number }} --remove-label deploy
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Setup github-actions[bot] account
      run: |
        git config user.name 'github-actions[bot]'
        git config user.email 'github-actions[bot]@users.noreply.github.com'

    - name: Get all tags from remote
      run: git fetch --all --tags

    - name: Get current Major/Minor Version
      run: grep -oP '(?<=<ApplicationDisplayVersion>).*?(?=</ApplicationDisplayVersion>)' ./FIS-J/FIS-J.csproj > MAJOR_MINOR_VERSION

    - name: generate bundle version pattern
      run: echo bundle`cat MAJOR_MINOR_VERSION`.[0-9]* > BUNDLE_VERSION_PATTERN

    - name: Get all tags reachable from current commit
      run: |
        git tag -l `cat BUNDLE_VERSION_PATTERN` > BUNDLE_VERSIONS
        cat BUNDLE_VERSIONS

    - name: Generate new patch version number
      run: |
        if [ `cat BUNDLE_VERSIONS | wc -l` -eq 0 ]; then
          echo 0 > PATCH_VERSION
          echo Tag \'`cat BUNDLE_VERSION_PATTERN`\' not found. ">> Patch Version '0' is selected."
        else
          sort -rV BUNDLE_VERSIONS | head -n 1 | awk -F '.' '{print $3 + 1}' > PATCH_VERSION
          echo "Patch Version:" `cat PATCH_VERSION`
        fi

    - name: create tag name
      run: echo bundle`cat MAJOR_MINOR_VERSION`.`cat PATCH_VERSION` > BUNDLE_VERSION
    - name: tagging new tag
      run: git tag -a `cat BUNDLE_VERSION` -m "Auto Generated tag ( https://github.com/${{github.repository}}/actions/runs/${{github.run_id}} )"

    - name: push new tag
      run: git push origin `cat BUNDLE_VERSION`
