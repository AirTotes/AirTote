name: Continuous Delivery Action

on:
  push:
    branches:
      - main
  pull_request:
    types: [ labeled ]

env:
  CSPROJ_PATH: ./AirTote/AirTote.csproj

jobs:
  generate-bundle-version:
    if: |
      github.event_name == 'push'
      || (github.event_name == 'pull_request' && github.event.label.name == 'deploy')
    runs-on: ubuntu-latest

    outputs:
      major_minor_version: ${{ steps.set_major_minor_version.outputs.version }}
      version_num: ${{ steps.set_version_number.outputs.version }}

    steps:
    - uses: actions/checkout@v3
      with:
        ref: ${{github.head_ref}}

    - name: Get all tags from remote
      run: git fetch --all --tags

    - name: generate bundle version pattern (Trigger:Push to main)
      if: ${{ github.event_name == 'push' }}
      run: grep -oP '(?<=<ApplicationDisplayVersion>).*?(?=</ApplicationDisplayVersion>)' ${{ env.CSPROJ_PATH }} > BUNDLE_VERSION_MAJOR_MINOR

    - name: generate bundle version pattern (Trigger:PullRequest)
      if: ${{ github.event_name == 'pull_request' }}
      run: echo "0.${{ github.event.number }}" > BUNDLE_VERSION_MAJOR_MINOR

    - name: set major/minor version to variable
      id: set_major_minor_version
      run: echo "::set-output name=version::$(cat BUNDLE_VERSION_MAJOR_MINOR)"

    - name: Get all tags reachable from current commit
      run: |
        git tag -l bundle`cat BUNDLE_VERSION_PATTERN`".[0-9]*" > BUNDLE_VERSIONS
        cat BUNDLE_VERSIONS

    - name: Generate new patch version number
      id: patch_version
      run: |
        if [ `cat BUNDLE_VERSIONS | wc -l` -eq 0 ]; then
          PATCH_VERSION=0
        else
          PATCH_VERSION=`sort -rV BUNDLE_VERSIONS | head -n 1 | awk -F '.' '{print $3 + 1}'`
        fi
        echo "::set-output name=version::$PATCH_VERSION"

    - name: set version number
      id: set_version_number
      run: echo "::set-output name=version::${{ steps.set_major_minor_version.outputs.version }}.${{ steps.patch_version.outputs.version }}"

    - name: print new version number
      run: echo "VersionNumber (Bundle Version) ... ${{ steps.set_version_number.outputs.version }}"

  set-tag:
    runs-on: ubuntu-latest
    needs: generate-bundle-version

    steps:
    - uses: actions/checkout@v3

    - name: Setup github-actions[bot] account
      run: |
        git config user.name 'github-actions[bot]'
        git config user.email 'github-actions[bot]@users.noreply.github.com'

    - name: tagging new tag
      run: git tag -a bundle${{ needs.generate-bundle-version.outputs.version_num }} -m "Auto Generated tag ( https://github.com/${{github.repository}}/actions/runs/${{github.run_id}} )"

    - name: push new tag
      run: git push origin `cat BUNDLE_VERSION`
    
    - name: Comment TagName and Actions-Run URL to PR
      if: ${{ github.event_name == 'pull_request' }}
      run: >
        echo Tag \`bundle${{ needs.generate-bundle-version.outputs.version_num }}\` was automatically created and pushed with
        ... https://github.com/${{github.repository}}/actions/runs/${{github.run_id}}
        | gh pr comment ${{ github.event.number }} -F -
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
